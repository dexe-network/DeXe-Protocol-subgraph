####################################  Pool <-> Proposal  ####################################
type Pool @entity {
  id: ID!
  trader: Bytes!
  proposalContract: Bytes!
}

type ProposalContract @entity {
  id: ID!
  pool: Bytes!
}

#################################### Transaction History ####################################
type Transaction @entity {
  id: ID! # tx hash
  timestamp: BigInt!
  block: BigInt!
  type: BigInt!

  user: Bytes!

  exchange: [Exchange!]! @derivedFrom(field: "transaction")
  vest: [Vest!]! @derivedFrom(field: "transaction")
  poolCreate: [PoolCreate!]! @derivedFrom(field: "transaction")

  proposalEdit: [ProposalEdit!]! @derivedFrom(field: "transaction")

  riskyProposalCreate: [RiskyProposalCreate!]! @derivedFrom(field: "transaction")
  riskyProposalExchange: [RiskyProposalExchange!]! @derivedFrom(field: "transaction")
  riskyProposalVest: [RiskyProposalVest!]! @derivedFrom(field: "transaction")

  investProposalClaimSupply: [InvestProposalClaimOrSupply!]! @derivedFrom(field: "transaction")
  investProposalCreate: [InvestProposalCreate!]! @derivedFrom(field: "transaction")
  investProposalWithdraw: [InvestProposalWithdraw!]! @derivedFrom(field: "transaction")

  insuranceStake: [InsuranceStake!]! @derivedFrom(field: "transaction")

  getPerfomanceFee: [GetPerfomanceFee!]! @derivedFrom(field: "transaction")

  onlyPool: [OnlyPool!]! @derivedFrom(field: "transaction")
}

type Exchange @entity {
  id: ID!
  pool: Bytes!

  fromToken: Bytes!
  toToken: Bytes!

  fromVolume: BigInt!
  toVolume: BigInt!

  transaction: Transaction!
}

type Vest @entity {
  id: ID!
  pool: Bytes!
  baseAmount: BigInt!
  lpAmount: BigInt!

  transaction: Transaction!
}

type PoolCreate @entity {
  id: ID!
  pool: Bytes!
  symbol: String!

  transaction: Transaction!
}

type RiskyProposalCreate @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!
  token: Bytes!

  transaction: Transaction!
}

type ProposalEdit @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!

  transaction: Transaction!
}

type RiskyProposalVest @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!

  baseAmount: BigInt!
  lp2Amount: BigInt!

  transaction: Transaction!
}

type RiskyProposalExchange @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!

  fromToken: Bytes!
  toToken: Bytes!

  fromVolume: BigInt!
  toVolume: BigInt!

  transaction: Transaction!
}

type InvestProposalCreate @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!

  transaction: Transaction!
}

type InvestProposalWithdraw @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!

  amount: BigInt!

  transaction: Transaction!
}

type InvestProposalClaimOrSupply @entity {
  id: ID!
  pool: Bytes!
  proposalId: BigInt!

  tokens: [Bytes!]!
  amounts: [BigInt!]!

  transaction: Transaction!
}

type InsuranceStake @entity {
  id: ID!
  amount: BigInt!

  transaction: Transaction!
}

type GetPerfomanceFee @entity {
  id: ID!
  baseAmount: BigInt!
  lpAmount: BigInt!

  transaction: Transaction!
}

type OnlyPool @entity {
  id: ID!
  pool: Bytes!

  transaction: Transaction!
}
