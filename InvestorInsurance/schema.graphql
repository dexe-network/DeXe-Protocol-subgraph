# @notice The entity that holds informations about pool
# @param id the pool address
# @param type the string with type of pool
# @param baseToken the address of base token
# @param ticker the symbol of pool's token
# @param name the name of pool's token
# @param descriptionURL the description url address from contract
# @param creationTime the timestamp of creating pool
# @param commission the commission of pool
# @param investors the array with Investor entities
# @param investorsCount the number of investors
type TraderPool @entity {
  id: ID! # pool address
  type: String!
  baseToken: Bytes!
  ticker: String!
  name: String!
  creationTime: BigInt!
  creationBlock: BigInt!
  commission: BigInt!

  investors: [Investor!]!
  investorsCount: BigInt!

  privateInvestors: [Investor!]!
  privateInvestorsCount: BigInt!
}

# @notice The entity holds information about Investor
# @param id the investor address
# @param insurance the bought insurance amount
# @param claimedAmount the paid insurance amount
# @param activePools the array with pools with investor's invests
# @param allPools the array with pools where the  investor has ever invested
type Investor @entity {
  id: ID! # investor address
  insurance: BigInt!
  claimedAmount: BigInt!

  activePools: [TraderPool!]!
  allPools: [TraderPool!]!

  insuranceHistory: [InsuranceHistory!]! @derivedFrom(field: "investor")
}

type InsuranceHistory @entity {
  id: ID! # investor address + timestamp / 86400
  insurance: BigInt!
  claimedAmount: BigInt!

  investor: Investor!
  day: BigInt!
}

type TraderPoolHistory @entity {
  id: ID! # pool address + timestamp / 86400
  investors: [Investor!]!
  investorsCount: BigInt!
  privateInvestors: [Investor!]!
  privateInvestorsCount: BigInt!
  pool: TraderPool!
  day: BigInt!
}
