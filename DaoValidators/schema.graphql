# @notice The entity that holds informations about pool
# @param id the pool address
type DaoPool @entity {
  id: Bytes! # pool address
  validators: [ValidatorInPool!]! @derivedFrom(field: "pool")
}

# @notice The entity that holds informations about validators contract
# @param id the validators contract address
# @param pool the pool address
type ValidatorsContract @entity(immutable: true) {
  id: Bytes! # validators contract address
  pool: Bytes!
}

# @notice The entity that holds informations about validators proposal
# @param id the pool address + proposalId + isInternal
# @param proposalId the id of proposal
# @param isInternal bool flag, if true - internal for validators
# @param quorum the number of required votes to confirm
# @param totalVote the current number of votes
# @param description the url of description
# @param creator the address of creator
# @param executor the address of executor
type Proposal @entity {
  id: ID! # pool address + proposalId + isInternal
  proposalId: BigInt!
  isInternal: Boolean!
  quorum: BigInt!
  totalVote: BigInt!

  # only internal values
  description: String!
  creator: Bytes!
  executor: Bytes!

  voters: [ValidatorInProposal!]! @derivedFrom(field: "proposal")
}

# @notice The entity that holds informations about validator's actions in pool
# @param id the validator address + pool address
# @param balance the amount of validators token
# @param pool the pool entity id
type ValidatorInPool @entity {
  id: Bytes! # validator address + pool address
  balance: BigInt!

  pool: DaoPool!
}

# @notice The entity that holds informations about vote
# @param id the tx hash + counter
# @param hash the tx hash
# @param timestamp the timestamp of transaction
# @param proposal the proposal entity id
# @param amount the amount of vote
# @param voter the ValidatorInProposal entity id
type ProposalVote @entity(immutable: true) {
  id: Bytes! # tx hash + counter
  hash: Bytes!
  timestamp: BigInt!
  proposal: Proposal!

  amount: BigInt!

  voter: ValidatorInProposal!
}

# @notice The entity that holds informations about vote
# @param id the user address + pool address + proposal id
# @param pool the pool entity id
# @param proposal the proposal entity id
# @param validator the ValidatorInPool entity id
# @param totalVote the total amount of vote this proposal
type ValidatorInProposal @entity {
  id: Bytes! # user address + pool address + proposal id
  pool: DaoPool!
  proposal: Proposal!
  validator: ValidatorInPool!

  totalVote: BigInt!

  votes: [ProposalVote!]! @derivedFrom(field: "voter")
}

# @notice The entity counts interactions in single tx
# @param id forms from tx hash
# @param count the counter of interactions in single tx
type InteractionCount @entity {
  id: Bytes!
  count: BigInt!
}
