"""
The entity that holds informations about pool
"""
type DaoPool @entity {
  "The pool address"
  id: Bytes!
  "Array of ValidatorInPool entity ids"
  validators: [ValidatorInPool!]! @derivedFrom(field: "pool")
}

"""
The entity that holds informations about validators contract
"""
type ValidatorsContract @entity(immutable: true) {
  "The validators contract address"
  id: Bytes!
  "The pool address"
  pool: Bytes!
}

"""
The entity that holds informations about validators proposal
"""
type Proposal @entity {
  "id forms from pool address + proposalId + isInternal"
  id: ID!
  "The id of proposal"
  proposalId: BigInt!
  "Boolean flag, if true - internal for validators"
  isInternal: Boolean!
  "The percentage of total votes required to decide whether to confirm the proposal or not"
  quorum: BigInt!

  "The current number of votes for the proposal"
  totalVoteFor: BigInt!
  "The current number of votes against the proposal"
  totalVoteAgainst: BigInt!

  "The URL of description"
  description: String!
  "The address of creator"
  creator: Bytes!
  "The address of executor"
  executor: Bytes!

  "Array of ValidatorInProposal entity ids"
  voters: [ValidatorInProposal!]! @derivedFrom(field: "proposal")
}

"""
The entity that holds informations about validator's actions in pool
"""
type ValidatorInPool @entity {
  "id forms from the validator address + pool address"
  id: Bytes!
  "The address of validator"
  validatorAddress: Bytes!
  "The amount of validators token"
  balance: BigInt!

  "The pool entity id"
  pool: DaoPool!
}

"""
The entity that holds informations about vote
"""
type ProposalInteraction @entity(immutable: true) {
  "id forms from the tx hash + interactionCount"
  id: Bytes!
  "The tx hash"
  hash: Bytes!
  "The timestamp of transaction"
  timestamp: BigInt!
  "The proposal entity id"
  proposal: Proposal!

  "The number associated with enum of proposal interaction type"
  interactionType: BigInt!
  "The amount of vote"
  amount: BigInt!

  "The ValidatorInProposal entity id"
  voter: ValidatorInProposal!
}

"""
The entity that holds informations about vote
"""
type ValidatorInProposal @entity {
  "id forms from the validator address + pool address + proposal id + isInternal"
  id: Bytes!
  "The pool entity id"
  pool: DaoPool!
  "The proposal entity id"
  proposal: Proposal!
  "The ValidatorInPool entity id"
  validator: ValidatorInPool!

  "The total amount of votes for this proposal"
  totalVoteFor: BigInt!
  "The total amount of votes against this proposal"
  totalVoteAgainst: BigInt!

  "The array of ProposalInteraction entity ids"
  interactions: [ProposalInteraction!]! @derivedFrom(field: "voter")
}

"""
The entity counts interactions in single tx
"""
type InteractionCount @entity {
  "The tx hash"
  id: Bytes!
  "The counter of interactions in single tx"
  count: BigInt!
}
